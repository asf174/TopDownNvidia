							╔═══════════════════════════════════════╗
							║ TopDown Metholodgy over NVIDIA's GPUs ║
							╚═══════════════════════════════════════╝


Welcome to the ../src/topdown.py program where you can check the bottlenecks of your 
CUDA program running on NVIDIA GPUs. This analysis is carried out considering the architectural 
aspects of your GPU, in its different parts. The objective is to detect the bottlenecks in your 
program, which cause the IPC (Instructions per Cycle) to be drastically reduced.

Next, you can see general information about the program
╔═══════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ GENERAL INFORMATION                                                                                   ║
║ -------------------                                                                                   ║
║                                                                                                       ║
║ - Program Name:    topdown.py                                                                         ║
║ - Author:          Alvaro Saiz (UC)                                                                   ║
║ - Contact info:    asf174@alumnos.unican.es                                                           ║
║ - Company:         University Of Cantabria                                                            ║
║ - Place:           Santander, Cantabria, Kingdom of Spain                                             ║
║ - Teachers:        Pablo Abad (UC) <pablo.abad@unican.es>, Pablo Prieto (UC) <pablo.prieto@unican.es> ║
║ - Bugs Report:     asf174@alumnos.unican.es                                                           ║
║                                                                                                       ║
║ - Licence:         GNU GPL                                                                            ║
╚═══════════════════════════════════════════════════════════════════════════════════════════════════════╝

In accordance with what has been entered, the execution will be carried out following the following terms:
╔═════════════════════════════════════════════════════════════════════════╗
║ EXECUTION FEATURES                                                      ║
║ ------------------                                                      ║
║                                                                         ║
║ - Execution Level:                  1                                   ║
║ - Analyzed program:                 ../../../../CUDA/bin/add_two_matrix ║
║ - Output File:                      ../results/output2.log              ║
║ - Long-Description:                 True                                ║
║ - Delete output's file content:     True                                ║
╚═════════════════════════════════════════════════════════════════════════╝

Said that, according to the level entered by you, WE START THE ANALYSIS.

The results have been obtained correctly. General results of IPC are the following:

			╔════════════════════════════════════════════════════╗
			║ IPC OBTAINED: 0.567752 | MAXIMUM POSSIBLE IPC: 6.0 ║
			╚════════════════════════════════════════════════════╝


'IPC OBTAINED' is the IPC of the analyzed program (computed by scan tool) and 'MAXIMUM POSSIBLE IPC'
is the the maximum IPC your GPU can achieve. This is computed taking into account architectural concepts, such as the
number of warp planners per SM, as well as the number of Dispatch units of each SM.
    As you can see, the IPC obtanied it is 1056.8% smaller than you could get. This lower IPC is due to STALLS in the different 
parts of the architecture and DIVERGENCE problems. We analyze them based on the level of the TopDown:
			╔══════════════════════════════════════════╗
			║ FRONT-END RESULTS                        ║
			║ -----------------                        ║
			║                                          ║
			║ STALLS, on the total (%):          7.46% ║
			║                                          ║
			║ IPC DEGRADATION (%):               7.46% ║
			║                                          ║
			╚══════════════════════════════════════════╝
			╔═══════════════════════════════════════════╗
			║ BACK-END RESULTS                          ║
			║ ----------------                          ║
			║                                           ║
			║ STALLS, on the total (%):          92.54% ║
			║                                           ║
			║ IPC DEGRADATION (%):               92.54% ║
			║                                           ║
			╚═══════════════════════════════════════════╝
			╔════════════════════════════════════════╗
			║ DIVERGENCE RESULTS                     ║
			║ ------------------                     ║
			║                                        ║
			║ IPC DEGRADATION (%):              0.0% ║
			║                                        ║
			╚════════════════════════════════════════╝
Analysis performed correctly!