target-processes
----------------------------------------
Select the processes you want to profile. Available modes are:

    application-only Profile only the root application process.
    
    all Profile the application and all its child processes. ### COGEMOS ESTA

This option is only available for Linux and Windows targets. 
---------------------------------------------------------

support-32bit
---------------------------------------------------------
 	Support profiling processes launched from 32-bit applications. 
    This option is only available on x86_64 Linux. On Windows, tracking 32-bit applications is enabled by default

    Cogemos "yes"
---------------------------------------------------------

replay-mode 	
---------------------------------------------------------
Mechanism used for replaying a kernel launch multiple times to collect all requested profiling data:

    kernel: Replay individual kernel launches "transparently" during the execution of the application.
    application: Relaunch the entire application multiple times. Requires deterministic program execution.

    DEFAULT: kernel. Cogemos kernel.
---------------------------------------------------------

app-replay-match NO ENTIENDO
---------------------------------------------------------

---------------------------------------------------------

list-sets
set
list-section
section

profile-from-start 	Set if application should be profiled from its start. Allowed values:
--------------------------------------------------------
    on/off
    yes/no

    DEFAULT: yes, tenemos que coger YES
--------------------------------------------------------



disable-profiler-start-stop
--------------------------------------------------------
Disable profiler start/stop. When enabled, cu(da)ProfilerStart/Stop API calls are ignored. 
--------------------------------------------------------


cache-control 	
--------------------------------------------------------
Control the behavior of the GPU caches during profiling. Allowed values:

    all: All GPU caches are flushed before each kernel replay iteration during profiling. 
    While metric values in the execution environment of the application might be slightly different without 
    invalidating the caches, this mode offers the most reproducible metric results across the replay passes and 
    also across multiple runs of the target application.
    none: No GPU caches are flushed during profiling. This can improve performance and better 
    replicates the application behavior if only a single kernel replay pass is necessary for metric collection. 
    However, some metric results will vary depending on prior GPU work, and between replay iterations. This can lead 
    to inconsistent and out-of-bounds metric values.

    DEFAULT: all, COGEMOS all
--------------------------------------------------------


clock-control
--------------------------------------------------------
 	Control the behavior of the GPU clocks during profiling. Allowed values:

    base: GPC and memory clocks are locked to their respective base frequency during profiling. 
    This has no impact on thermal throttling. Note that actual clocks might still vary, depending on 
    the level of driver support for this feature. As an alternative, use nvidia-smi to lock the clocks 
    externally and set this option to none.
    none: No GPC or memory frequencies are changed during profiling.

    DEFAULT base; cogemos base creo

--------------------------------------------------------

sampling-interval 	
--------------------------------------------------------
    Set the sampling period in the range of [0..31]. The actual frequency is 2 ^ (5 + value) cycles. If set to 'auto', t
    he profiler tries to automatically determine a high sampling frequency without skipping samples or 
    overflowing the output buffer. 	

    DEFAULT auto #TODO mirar cuando
--------------------------------------------------------


............................................................ FILE PART ................................................
log-file: si no esta puesto, SE MUESTRAN POR CONSOLA
o,export:  Set the output file for writing the profile report.
f,force-overwrite: SOBREESCRIBE, lo cojo.
.......................................................................................................................

................................................Console Output................................................
Hay que mirarlos con ejecuciones.
.......................................................................................................................





############################################################# CONTADORES ##############################################

NIVEL 1:

    - FRONT_END:
        + stall_inst_fetch =  smsp__warp_issue_stalled_no_instruction_per_warp_active.pct
        + stall_exec_dependency =  smsp__warp_issue_stalled_short_scoreboard_per_warp_active.pct + smsp__warp_issue_stalled_wait_per_warp_active.pct
        + stall_sync = smsp__warp_issue_stalled_barrier_per_warp_active.pct + smsp__warp_issue_stalled_membar_per_warp_active.pct
        + stall_other = smsp__warp_issue_stalled_dispatch_stall_per_warp_active.pct + smsp__warp_issue_stalled_misc_per_warp_active.pct
        + stall_not_selected = smsp__warp_issue_stalled_not_selected_per_warp_active.pct
        + = smsp__warp_issue_stalled_branch_resolving_per_warp_active
        + = smsp__warp_issue_stalled_selected_per_warp_active                                    
        + = smsp__warp_issue_stalled_sleeping_per_warp_active #DUDA

    - BACK_END:
        + stall_memory_dependency = smsp__warp_issue_stalled_long_scoreboard_per_warp_active.pct
        + stall_constant_memory_dependency = smsp__warp_issue_stalled_imc_miss_per_warp_active.pct
        + stall_pipe_busy = smsp__warp_issue_stalled_math_pipe_throttle_per_warp_active.pct + smsp__warp_issue_stalled_mio_throttle_per_warp_active.pct
        + stall_memory_throttle =  	smsp__warp_issue_stalled_drain_per_warp_active.pct + smsp__warp_issue_stalled_lg_throttle_per_warp_active.pct
        + = smsp__warp_issue_stalled_tex_throttle_per_warp_active #DUDA

    - DIVERGENCE:
        + branch_efficiency = smsp__sass_average_branch_targets_threads_uniform.pct
        + warp_execution_efficiency = smsp__thread_inst_executed_per_inst_executed.ratio
        + issued_ipc =  smsp__inst_issued.avg.per_cycle_active

    - RETIRE:
        + ipc = smsp__inst_executed.avg.per_cycle_active

    - EXTRA-MEASURE:
        + active_cycles = sm__cycles_active.sum
        + elapsed_cycles_sm =  	sm__cycles_elapsed.sum
NIVEL 2:

    - FRONT-END.BAND-WIDTH
        + stall_exec_dependency =  smsp__warp_issue_stalled_short_scoreboard_per_warp_active.pct + smsp__warp_issue_stalled_wait_per_warp_active.pct
        + stall_not_selected = smsp__warp_issue_stalled_not_selected_per_warp_active.pct
        + = smsp__warp_issue_stalled_branch_resolving_per_warp_active
        + = smsp__warp_issue_stalled_sleeping_per_warp_active #DUDA
    - FRONT-END.DEPENDENCY 
        + stall_inst_fetch =  smsp__warp_issue_stalled_no_instruction_per_warp_active.pct
        + stall_sync = smsp__warp_issue_stalled_barrier_per_warp_active.pct + smsp__warp_issue_stalled_membar_per_warp_active.pct
        + stall_other = smsp__warp_issue_stalled_dispatch_stall_per_warp_active.pct + smsp__warp_issue_stalled_misc_per_warp_active.pct
        + = smsp__warp_issue_stalled_selected_per_warp_active         

    - BACK-END.CORE-BOUND
        + stall_pipe_busy = smsp__warp_issue_stalled_math_pipe_throttle_per_warp_active.pct + smsp__warp_issue_stalled_mio_throttle_per_warp_active.pct

    - BACK-END.MEMORY-BOUND
        + stall_memory_dependency = smsp__warp_issue_stalled_long_scoreboard_per_warp_active.pct
        + stall_constant_memory_dependency = smsp__warp_issue_stalled_imc_miss_per_warp_active.pct
        + stall_memory_throttle =  	smsp__warp_issue_stalled_drain_per_warp_active.pct + smsp__warp_issue_stalled_lg_throttle_per_warp_active.pct
        + = smsp__warp_issue_stalled_tex_throttle_per_warp_active #DUDA
NIVEL 3:

    - MEMORY-BOUND.CONSTANT-MEMORY-BOUND  
        + stall_constant_memory_dependency = smsp__warp_issue_stalled_imc_miss_per_warp_active.pct
############################################################# FIN CONTADORES ##############################################